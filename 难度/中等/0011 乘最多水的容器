# 题目地址：
https://leetcode-cn.com/problems/container-with-most-water/
## 代码：
### 1.双指针：
```C++
class Solution {
public:
    int maxArea(vector<int>& height) {
        if(height.empty()) return 0;
        int i=0;
        int j=height.size()-1;
        int res = 0;
        while(i<j){
            res = max(res,(j-i)*min(height[i],height[j]));
            if(height[i]<=height[j]) i++;
            else j--;
        }
        return res;
    }
};
```
#### 思路：
从两边向中间遍历，每次移动高度更小的那个指针，证明其实只有一句话：如果移动另一边，那么容量必然会减小，以高度更小的作为边界时，这时的容量是最大的，可以不再以其为边界，找下一个最大值
#### 复杂度分析：
- 时间复杂度: O(N)
- 空间复杂度: O(1)
